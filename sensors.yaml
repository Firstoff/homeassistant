- platform: command_line
  name: CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone2/temp"
  unit_of_measurement: "°C"
  value_template: '{{ (value | multiply(0.001)) | round(1) }}'


- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /home
#    - type: disk_use_percent
#      arg: /mnt/home-media
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot


- platform: template
  sensors:
    door_sensor_battery_158d0001a9c200:
      friendly_name: "Заряд датчика открытия двери"
      unit_of_measurement: '%'
      value_template: "{{ states.binary_sensor.door_window_sensor_158d0001a9c200.attributes. battery_level }}"
      icon_template: >-
        {% set battery_level = (states.binary_sensor.door_window_sensor_158d0001a9c200.attributes.battery_level)|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
          mdi:battery-unknown
        {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
        {% endif %}
    motion_sensor_battery_158d0001b177e8:
      friendly_name: "Заряд датчика движения"
      unit_of_measurement: '%'
      value_template: "{{ states.binary_sensor.motion_sensor_158d0001b177e8.attributes. battery_level }}"
      icon_template: >-
        {% set battery_level = (states.binary_sensor.motion_sensor_158d0001b177e8.attributes.battery_level)|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
          mdi:battery-unknown
        {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
        {% endif %}
    temperature_sensor_battery_158d00023764a1:
      friendly_name: "Заряд датчика температуры"
      unit_of_measurement: '%'
      value_template: "{{ states.sensor.temperature_158d00023764a1.attributes. battery_level }}"
      icon_template: >-
        {% set battery_level = (states.sensor.temperature_158d00023764a1.attributes.battery_level)|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
          mdi:battery-unknown
        {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
        {% endif %}
    button_sensor_battery_158d0001aaab2d:
      friendly_name: "Заряд кнопки"
      unit_of_measurement: '%'
      value_template: "{{ states.binary_sensor.switch_158d0001aaab2d.attributes. battery_level }}"
      icon_template: >-
        {% set battery_level = (states.binary_sensor.switch_158d0001aaab2d.attributes.battery_level)|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
          mdi:battery-unknown
        {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
        {% endif %}
    water_level:
      friendly_name: Уровень воды
      unit_of_measurement: '%'
      entity_id:  fan.xiaomi_miio_device
      value_template: >-
        {{ [state_attr('fan.xiaomi_miio_device', 'depth') / 1.2, 100] | min | int  }}
      icon_template: "mdi:cup"
    heater_on_sensor:
      friendly_name: "Датчик работы"
      value_template: >
        {% if states.switch.ariston.state == 'on' %}
          {{states.sensor.temperature_158d00023764a1.state}}
        {% else %}
          0
        {% endif %}

# - platform: yandex_weather
#   lat: !secret home_lat
#   lon: !secret home_long
#   api_key: !secret ya_api_weather
#   scan_interval: 1800

#- platform: seventeentrack
#  username: !secret 17track_login
#  password: !secret 17track_pass


- platform: darksky
  api_key: !secret darksky_api_key
#  forecast:
#    - 0
  language: ru
  monitored_conditions:
    - summary
    - icon
    - temperature
    - wind_speed
    - humidity
    - visibility
    - temperature_high
    - temperature_low
    - apparent_temperature
    - precip_probability


- platform: "mqtt"
  state_topic: "zigbee2mqtt/0x00158d00029ba6bc"
  name: "cube"
  availability_topic: "zigbee2mqtt/bridge/state"
  icon: "mdi:gesture-double-tap"
  value_template: "{{ value_json.action }}"
  json_attributes: 
    - "linkquality"
    - "battery"
    - "voltage"
    - "angle"
    - "side"
    - "from_side"
    - "to_side"
    - "brightness"
    - "angle_x_absolute"
    - "angle_y_absolute"
    - "angle_z"
    - "angle_y"
    - "angle_x"
    - "unknown_data"
  force_update: true

- platform: "mqtt"
  state_topic: "zigbee2mqtt/0x00158d000240306d"
  availability_topic: "zigbee2mqtt/bridge/state"
  device_class: "battery"
  value_template: "{{ value_json.battery }}"
  json_attributes: 
    - "linkquality"
    - "voltage"
    - "action"
    - "sensitivity"

- platform: "mqtt"
  state_topic: "/devices/wb-msw-v3_20/controls/CO2"
  name: "CO2 Kitchen"
  unit_of_measurement: 'ppm'
  icon: mdi:periodic-table-co2

- platform: "mqtt"
  state_topic: "/devices/wb-msw-v3_20/controls/Temperature"
  name: "Temperature Kitchen"
  unit_of_measurement: '°C'
  icon: mdi:thermometer

- platform: "mqtt"
  state_topic: "/devices/wb-msw-v3_20/controls/Humidity"
  name: "Humidity Kitchen"
  unit_of_measurement: '%'
  icon: mdi:water-percent


#- platform: influxdb
#  username: !secret influx_user
#  password: !secret influx_pass
#  host: 192.168.1.101
#  queries:
#    - name: "db_size_influx"
#      unit_of_measurement: MB
#      value_template: '{{ (value | float / 1024 /1024) | round(1) }}'
#      group_function: sum
#      measurement: '"monitor"."shard"'
#      database: _internal
#      where: 'time > now() - 10s'
#      field: diskBytes

- platform: filesize
  file_paths:
  - /config/home-assistant_v2.db


###яндекс

- platform: rest # 'Пробки в Волгограде'
  name: 'Yandex traffic'
  resource: "https://core-jams-rdr.maps.yandex.net/description/traffic-light?lang=ru_RU&ids=38,10950"
  value_template: "{{ value_json['data'].features[0]['properties']['JamsMetaData']['level'] }}"
  scan_interval: 300
  unit_of_measurement: баллов
  headers:
    User-Agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.96 Safari/537.36"

- platform: yandex_maps
  start: 'device_tracker.iphone'
  destination: !secret ya_home
  name: Yandex route to home Lilith

- platform: yandex_maps
  start: 'device_tracker.iphone'
  destination: !secret ya_nails
  name: Yandex route to work Lilith

- platform: yandex_maps
  start: 'device_tracker.iphone_2'
  destination: !secret ya_home
  name: Yandex route to home hunt mf

- platform: yandex_maps
  start: 'device_tracker.iphone_2'
  destination: !secret ya_unico
  name: Yandex route to work hunt mf
